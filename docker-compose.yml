version: "3.8"

services:
  featherstore:
    build:
      context: .
      dockerfile: Dockerfile
    image: featherstore:latest
    container_name: featherstore
    restart: unless-stopped
    ports:
      - "8080:8080" # HTTP API
      - "8081:8081" # Arrow Flight
    volumes:
      - featherstore-data:/app/data
      - ./config.yaml:/app/config/config.yaml
    environment:
      - FEATHERSTORE_METRICS_PROMETHEUS_PORT=9090
      - FEATHERSTORE_LOGGING_LEVEL=info
    networks:
      - featherstore-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    networks:
      - featherstore-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - featherstore-network
    depends_on:
      - prometheus

volumes:
  featherstore-data:
  prometheus-data:
  grafana-data:

networks:
  featherstore-network:
    driver: bridge
